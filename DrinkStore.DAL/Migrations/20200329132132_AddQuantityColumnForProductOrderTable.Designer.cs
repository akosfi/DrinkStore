// <auto-generated />
using System;
using DrinkStore.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DrinkStore.DAL.Migrations
{
    [DbContext(typeof(DrinkStoreContext))]
    [Migration("20200329132132_AddQuantityColumnForProductOrderTable")]
    partial class AddQuantityColumnForProductOrderTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DrinkStore.DAL.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ásványvíz"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bor"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Cider"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Citromlé"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pezsgő"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sör"
                        });
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.PackSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Quanitity")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PackSizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Quanitity = 1.5,
                            Unit = "l"
                        },
                        new
                        {
                            Id = 2,
                            Quanitity = 0.75,
                            Unit = "l"
                        });
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackSizeId")
                        .HasColumnType("int");

                    b.Property<int?>("SubCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("UnitPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PackSizeId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Name = "Szekszárdi Vörös Cuvée",
                            PackSizeId = 1,
                            SubCategoryId = 4,
                            UnitPrice = 902
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Birtok Fehér",
                            PackSizeId = 2,
                            SubCategoryId = 4,
                            UnitPrice = 736
                        });
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.ProductOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrders");
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.Subcategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Subcategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 2,
                            Name = "Gyümölcs bor"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Házi bor"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Külföldi bor"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "Magyar bor"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            Name = "Rendezvény bor"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            Name = "Borsodi Sörgyár Kft."
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 6,
                            Name = "Brewdog"
                        });
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.Product", b =>
                {
                    b.HasOne("DrinkStore.DAL.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DrinkStore.DAL.Entities.PackSize", "PackSize")
                        .WithMany("Products")
                        .HasForeignKey("PackSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrinkStore.DAL.Entities.Subcategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.ProductOrder", b =>
                {
                    b.HasOne("DrinkStore.DAL.Entities.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DrinkStore.DAL.Entities.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DrinkStore.DAL.Entities.Subcategory", b =>
                {
                    b.HasOne("DrinkStore.DAL.Entities.Category", "Category")
                        .WithMany("Subcategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
